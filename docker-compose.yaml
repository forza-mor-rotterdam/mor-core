version: '3'
services:
  nginx:
    build: ./nginx
    # image: nginx:alpine

    # command: >
    #   /bin/sh -c "cp ./nginx/nginx-nginx.conf /etc/nginx/nginx.conf && cp ./nginx/nginx-default.conf /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    # command: >
    #   /bin/sh -c
    #   "cp /etc/nginx/nginx-nginx.conf /etc/nginx/nginx.conf && envsubst '
    #   $$PROXY_PASS
    #   '< /etc/nginx/nginx-default.development.template
    #   > /etc/nginx/conf.d/default.conf
    #   && nginx -g 'daemon off;'"
    volumes:
      # - ./nginx/nginx-default.development.template:/etc/nginx/nginx-default.development.template
      # - ./nginx/nginx-nginx.conf:/etc/nginx/nginx-nginx.conf
      - ./media:/media
    depends_on:
      - app
    ports:
      - 8080:80
    networks:
      - mor_network
    env_file:
      - .env.local
  app:
    build: ./app
    extra_hosts:
      - "mor-core.forzamor.local:172.17.0.1"
    ports:
      - "8000"
    env_file:
      - .env.local
    volumes:
      - ./app:/app
      - ./media:/media
    depends_on:
      - database
    networks:
      - mor_network
    command: ["bash", "/app/deploy/docker-entrypoint.development.sh"]

  database:
    image: postgis/postgis:11-3.3
    shm_size: '1024m'
    ports:
      - "5410:5433"
    env_file:
      - .env.local
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mor_network

volumes:
  postgres-data:

networks:
  mor_network:
    external: true

[uwsgi]
chdir  = /app
module = config.wsgi:application
static-index = index.html
static-map = /static=/static
# static-map = /media=/media
http = 0.0.0.0:8000

uid = appuser
gid = appuser

stats = 0.0.0.0:9191                    ; Expose stats interface
strict = true
master = true
enable-threads = true
vacuum = true                           ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                      ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

disable-logging = true                  ; Disable built-in logging
log-4xx = true                          ; but log 4xx's anyway
log-5xx = true                          ; and 5xx's

harakiri = 120                          ; Max duration of request handling

processes = 2                           ; Number of Python processes
threads = 2                             ; Number of threads per process (may increase to 4 later)

max-requests = 500                      ; Restart workers after this many requests
; max-requests-delta = 10                 ; Number of requests to spread the reloads, possibly requires uwsgi 2.1 beta
max-worker-lifetime = 3600              ; Restart workers after this many seconds

; reload-on-rss and reload-on-as options are not used, hopefully not needed because we have sufficient resources, 256/2=>128 + some extra
; reload-on-rss = 100                    ; Triggers reload based on resident set size
; reload-on-as = 100                     ; Triggers reload based on address space

worker-reload-mercy = 30                ; Time given to worker to finish requests before reload

buffer-size = 32768                     ; Bytes
post-buffering = 65535                  ; Bytes
post-buffering-bufsize = 65535          ; Bytes

; cheaper-algo = busyness
; cheaper-busyness-verbose = true
cheaper = 0                             ; Minimum number of workers allowed, turned off.
; cheaper-initial = 16                  ; Workers created at startup
; cheaper-overload = 2                  ; Length of a cycle in seconds
; cheaper-step = 16                     ; How many workers to spawn at a time

; cheaper-busyness-multiplier = 30      ; How many cycles to wait before killing workers
; cheaper-busyness-min = 20             ; Below this threshold, kill workers (if stable for multiplier cycles)
; cheaper-busyness-max = 60             ; Above this threshold, spawn new workers
; cheaper-busyness-backlog-alert = 16   ; Spawn emergency workers if more than this many requests are waiting in the queue
; cheaper-busyness-backlog-step = 2     ; How many emergency workers to create if there are too many requests in the queue

[uwsgi]
chdir  = /app
module = config.wsgi:application
static-index = index.html
static-map = /static=/static
# static-map = /media=/media
http = 0.0.0.0:8000

uid = appuser
gid = appuser

strict = true
master = true
enable-threads = true
vacuum = true                        ; Delete sockets during shutdown
single-interpreter = true
die-on-term = true                   ; Shutdown when receiving SIGTERM (default is respawn)
need-app = true

disable-logging = true               ; Disable built-in logging
log-4xx = true                       ; but log 4xx's anyway
log-5xx = true                       ; and 5xx's

harakiri = 600                       ; forcefully kill workers after 60 seconds

max-requests = 1000                  ; Restart workers after this many requests
; max-requests-delta = 100           ; Only available on uwsgi 2.1
max-worker-lifetime = 3600           ; Restart workers after this many seconds
reload-on-rss = 4048                 ; Restart workers after this much resident memory
reload-on-as = 4048                  ; Reload if address space is higher than specified megabytes
worker-reload-mercy = 60             ; How long to wait before forcefully killing workers

buffer-size = 32768

workers = 1                          ; Maximum number of workers/processes allowed
processes = 1                        ; Maximum number of workers/processes allowed
threads = 8                          ; Cores: 8

; cheaper-algo = busyness
; cheaper-busyness-verbose = true
; cheaper = 8                          ; Minimum number of workers allowed
; cheaper-initial = 16                 ; Workers created at startup
; cheaper-overload = 2                 ; Length of a cycle in seconds
; cheaper-step = 16                    ; How many workers to spawn at a time

; cheaper-busyness-multiplier = 30     ; How many cycles to wait before killing workers
; cheaper-busyness-min = 20            ; Below this threshold, kill workers (if stable for multiplier cycles)
; cheaper-busyness-max = 60            ; Above this threshold, spawn new workers
; cheaper-busyness-backlog-alert = 16  ; Spawn emergency workers if more than this many requests are waiting in the queue
; cheaper-busyness-backlog-step = 2    ; How many emergency workers to create if there are too many requests in the queue
